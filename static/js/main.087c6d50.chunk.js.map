{"version":3,"sources":["components/Editor.js","hooks/useLocalStorage.js","components/App.js","index.js"],"names":["Editor","props","name","lang","value","onChange","imgSRC","_useState","useState","_useState2","_slicedToArray","open","setOpen","React","createElement","id","className","concat","src","alt","onClick","prevOpen","ControlledEditor","onBeforeChange","editor","data","options","mode","lineNumbers","lineWrapping","theme","lint","useLocalStorage","key","initialValue","jsonValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","App","_useLocalStorage","_useLocalStorage2","html","setHTML","_useLocalStorage3","_useLocalStorage4","css","setCSS","_useLocalStorage5","_useLocalStorage6","js","setJS","srcDoc","setSrcDoc","timeout","setTimeout","clearTimeout","Fragment","title","sandbox","width","height","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.087c6d50.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport \"codemirror/lib/codemirror.css\"\r\nimport \"codemirror/theme/material.css\"\r\nimport \"codemirror/mode/xml/xml\"\r\nimport \"codemirror/mode/css/css\"\r\nimport 'codemirror/mode/javascript/javascript'\r\nimport {Controlled as ControlledEditor} from 'react-codemirror2'\r\n\r\nexport default function Editor(props) {\r\n    const {name, lang, value, onChange, imgSRC} = props\r\n\r\n    const [open, setOpen] = useState(true)\r\n\r\n    function handleChange(editor, data, value) {\r\n        onChange(value)\r\n    }\r\n\r\n    return (\r\n        <div id={name} className={`editor-card ${open ? '': 'collapsed'}`}>\r\n            <div className='editor-title'>\r\n                <img src={imgSRC} alt={`${name} logo`}/>\r\n                {name}\r\n                <button onClick={()=>setOpen(prevOpen => !prevOpen)}>\r\n                    <img src={`${open?'img/arrows-fullscreen.svg':'img/fullscreen-exit.svg'}`} alt={name} />\r\n                </button>\r\n            </div>\r\n            <ControlledEditor\r\n                onBeforeChange={handleChange}\r\n                value={value}\r\n                className='editor-body'\r\n                options={{\r\n                    mode: lang,\r\n                    lineNumbers: true,\r\n                    lineWrapping: true,\r\n                    theme: \"material\",\r\n                    lint: true,\r\n                    // matchTagPairs: true,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import {useEffect, useState} from 'react'\r\n\r\nexport default function useLocalStorage(key, initialValue) {\r\n    const [value, setValue] = useState(()=>{\r\n        const jsonValue = localStorage.getItem(key);\r\n\r\n        if(jsonValue != null) return JSON.parse(jsonValue);\r\n\r\n        if(typeof(initialValue) === 'function'){\r\n            return initialValue();\r\n        } else {\r\n            return initialValue;\r\n        }\r\n    })\r\n\r\n    useEffect(()=>{\r\n        localStorage.setItem(key, JSON.stringify(value));\r\n    }, [key, value])\r\n\r\n    return [value, setValue]\r\n}\r\n","import React, {useState, useEffect} from \"react\";\nimport Editor from \"./Editor\";\nimport useLocalStorage from \"../hooks/useLocalStorage\";\n\nfunction App() {\n  const [html, setHTML] = useLocalStorage('html', '')\n  const [css, setCSS] = useLocalStorage('css', '')\n  const [js, setJS] = useLocalStorage('js', '')\n  const [srcDoc, setSrcDoc] = useState('')\n\n  var clearCode = () => {\n    setHTML('')\n    setCSS('')\n    setJS('')\n  }\n\n  useEffect(()=>{\n    const timeout = setTimeout(()=>{\n      setSrcDoc(`\n        <html>\n          <style> ${css} </style>\n          <body>\n            ${html}\n            <script> ${js} </script>\n          </body>\n        </html>\n      `)\n    }, 1000)\n\n    return () => clearTimeout(timeout) // Removes the old timeout if anything changes in the time interval\n  }, [html, css, js])\n\n  return (\n    <>\n      <div className=\"block top-block\">\n        <Editor imgSRC='img/html.png' lang='xml' name='HTML' value={html} onChange={setHTML} />\n        <Editor imgSRC='img/css.png' lang='css' name='CSS' value={css} onChange={setCSS} />\n        <Editor imgSRC='img/js.png' lang='javascript' name='JS' value={js} onChange={setJS} />\n      </div>\n      <div className=\"block\">\n        <iframe\n          srcDoc={srcDoc}\n          title=\"output\"\n          sandbox=\"allow-scripts\"\n          width=\"100%\"\n          height=\"100%\"\n        />\n      </div>\n      <button className=\"clear-btn\" onClick={()=>clearCode()}>Clear All Code</button>\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './components/App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <App />\n);\n\n"],"sourceRoot":""}